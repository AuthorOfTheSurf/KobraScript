PROGRAM ::=  STMT+
DEC     ::=  VARDEC  |  FNDEC
TYPE    ::=  (boolean | char | int | float | str | ID)  ('[]')*
FNTYPE  ::=  TYPE  'fn'
ASSIGN  ::=  ID  '='  EXP  END
BLOCK   ::=  ':'  (STMT)+  'end'
        |    ':'  (STMT)+  '..'
VARDEC  ::=  '$'  ID  '=' EXP  (':'  TYPE)?  END
        |    '$'  ID  ':'  TYPE  END
        |    '$'  ID  (',' ID)+  ('='  EXP  (','  EXP)?)?  (':'  TYPE)?  END
        |    '$'  ID  '='  FNTYPE  PARAMS  BLOCK  END
FNDEC   ::=  FNTYPE  ID  PARAMS  BLOCK  END
VAR     ::=  ID
        |    VAR  '['  EXP  ']'
        |    VAR  '.'  ID
STMT    ::=  DEC
        |    DEC  'if'  EXP
        |    COND
        |    'while'  '('  EXP  BLOCK
        |    'for'  '('  (('$')?  ASSIGN)?  ';'  EXP  ';'  INCREMENT  BLOCK
COND0   ::=  'if'  '('  EXP  ')'  BLOCK
COND2   ::=  COND0  'else if'  '('  EXP  ')'  BLOCK
COND3   ::=  (COND0  |  COND2)  '..[ ]*else'  (STMT)*  '}' 
COND    ::=  (COND0  |  COND1  |  COND2  |  COND3)

        


RETURN  ::=  'return'  VAR  END
PARAM   ::=  ID (':' TYPE)?
        |    EXP (':' TYPE)?
PARAMS  ::=  '('  PARAM  (','  PARAM)*  ')'
END     ::=  '\x09'  |  ';'
INCR    ::=  VAR  "++"
        |    VAR  "--"
        |    VAR  "+="  int
        |    VAR  "-="  int
        |    VAR  "*="  int



COMMENT ::=  '--'  TEXT  END
        |    '---'  TEXT  '!--'