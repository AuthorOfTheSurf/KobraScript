/**
 * This is regarded as the the most up to date specification of KS
 * KobraScript Syntax v.1.2
 * 
 * Absent: specification for increments (pre/post) 
 */

PROGRAM ::=  STMT+
        |    BLUPRNT
OPENBLK ::=  ':'  STMT+

FNTYPE  ::=  'proc' | 'fn'
VALUE   ::   VAR
        |    EXP  ('#'  EXP)? 
        |    MAKE
        |    FNDEC
        |    FNCALL
VAR     ::=  ID
        |    VAR  '['  EXP  ']'
        |    VAR  '.'  ID
        |    EASYFN

VARDEC  ::=  '$' ASSIGN  (','  ASSIGN)*
        |    EASYFN
ASSIGN  ::=  ID  '=' VALUE
        |    ID  ':=:'  ID
PRPRTY  ::=  ID  ':' VALUE

FNDEC   ::=  FNTYPE  PARAMS  OPENBLK  ('..' | 'end')
EASYFN  ::=  FNTYPE  (ID)?  PARAMS  OPENBLK  ('..' | 'end')
FNCALL  ::=  VAR PARAMS

BLUPRNT ::=  'blueprint'  ID  PARAMS  BLUBLK  'defcc'
MAKE    ::=  'construct'  ID  '('  ((ID  '='  EXP  ',')*  ID  '='  EXP | (ID  ',')*  ID)  ')'
BLUBLK  ::=  ':'  HASBLK  DOESBLK  SYNGET?  SYNSET?
HASBLK  ::=  'has'  ':'  VARDEC?
DOESBLK ::=  'does'  ':'  FNDEC?
SYNGET  ::=  'synget'  ':'  (ID  ',')*  ID
SYNSET  ::=  'synset'  ':'  (ID  ',')*  ID

STMT    ::=  VARDEC
        |    ASSIGN
        |    'if'  '('  EXP  ')'  OPENBLK  ('..'  'else'  'if'  '('  EXP  ')'  OPENBLK)*  ('..'  'else'  '('  EXP  ')'  BLOCK)?  'end'
        |    'for'  '('  (VARDEC)?  ';'  EXP  ';'  INCREMENT  ')'  OPENBLK  'end'
        |    'while'  '('  EXP  ')'  OPENBLK  'end'
        |    'return'  EXP  OPENBLK  'end'

EXP     ::=  EXP1 ('||') EXP1
EXP1    ::=  EXP2 ('&&') EXP2
EXP2    ::=  EXP3 (('<' | '<=' | '==' | '~=' '!=' | '>=' | '>' | 'is') EXP3)?
EXP3    ::=  EXP4 ([+-] EXP4)*
EXP4    ::=  EXP5 ([%*/] EXP5)*
EXP5    ::=  EXP6 (('**' | '-**')  EXP6)
EXP6    ::=  ('~!' | '~?')?  EXP7
EXP7    ::=  ('!')?  EXP8
EXP8    ::=  'undefined' | 'null' | BOOLIT | STRLIT | NUMLIT | ID | '(' EXP ')'

PARAM   ::=  VAR | EXP
PARAMS  ::=  '('  PARAM  (','  PARAM)*  ')'
INCR    ::=  VAR  "++" | "++"  VAR
        |    VAR  "--" | "-^"  VAR
        |    VAR  "+="  INTLIT
        |    VAR  "-="  INTLIT
        |    VAR  "*="  INTLIT
        |    VAR  "%="  INTLIT