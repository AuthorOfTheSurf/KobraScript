$ name = "Samson"
$ a, b, c = 5, 12, 13 --implicit cast to int
$ protein_intake = [12, 21.3, 7.2, 20] : float[]
---alternatively:
$ protein_intake = float[12, 21.3, 7.2, 20]
---
$ body_fat = 11.267 --throws missing typecast, int is a defaulty thing, float must be aknowledged with token

$ secret_code = 110 001 010 : bits --spaces are fine; declare clearly decipherable bit values
$ lucky_sequence = 111 111 111 : bits

floatfn average_intake (x : #) --x can be any type, more specifically, x assumes the same value and type of the parameter
    $ total = 0
    for ($ i = 0; i < x.length; i++)
        total = total + x[i]
    }  
    console.log(total) --alternative loge invokation available
    give total / x.length
}
         
$ bicycle = {
    $ frame = "aluminum" : str,
      year = 2009 : int,
      gears = 10 : int ,
      speed = 12.7 : float,
    
    move = proc ()
        Transform.translate(FORWARD * this.speed)
    },
    upgrade_speed = floatfn ()
        give this.speed = this.speed * 1.1
    },
    get_frame = strfn () give this.frame } --one-liner function syntax
}

$ is_red = true,
  is_food = false,
  is_mine = true;

if (is_red && is_food)
    eat ()
.. else if (is_food && is_mine)
    add_butter ()
.. else
    keep ()
}     




